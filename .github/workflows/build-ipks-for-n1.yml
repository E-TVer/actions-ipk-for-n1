#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: Build ipks For N1

on:
  repository_dispatch:
  push:
    branches:
      - master
#    paths:
#      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
#  watch:
#    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  SSH_ACTIONS: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Setup Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: "^1.15"
      run: go version

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update feeds
      run: |
        cd openwrt/
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@main
      if: env.SSH_ACTIONS == 'true' || contains(github.event.action, 'ssh')

    - name: Check and update Smartdns
      run: |
        cd ./openwrt
        latest=$(curl -sL https://github.com/pymumu/smartdns/releases )
        ver=$(echo "$latest"|grep -o 'smartdns.[0-9_\.-]\+.x86_64-linux-all.tar.gz' |head -1 |sed -e 's#smartdns.##' -e 's#.x86_64.*##')
        commit=$(echo "$latest"|grep -o '/pymumu/smartdns/commit/[a-z0-9]\+'|head -1 | cut -d\/ -f5)
        if ! grep -q "$commit" ./package/feeds/packages/smartdns/Makefile; then
          sed -i -e '/^PKG_MIRROR_HASH/s#=.*#=skip#' -e "/^PKG_VERSION/s#=.*#=$ver#" -e "/^PKG_SOURCE_VERSION/s#=.*#=$commit#" ./package/feeds/packages/smartdns/Makefile
          make ./package/feeds/packages/smartdns/download V=s
          make ./package/feeds/packages/smartdns/check FIXUP=1 V=s
        fi

    - name: Check and update V2ray
      run: |
        cd ./openwrt
        latest=$(curl -sL https://github.com/v2fly/v2ray-core/releases )
        ver=$(echo "$latest"|grep -o 'tree/v[0-9]\+\.[0-9]\+\.[0-9]\+' |head -1 |cut -d v -f2)
        if ! grep "^PKG_VERSION.*$ver" ./package/lean/v2ray/Makefile; then
          sed -i -e '/^PKG_HASH/s#=.*#=skip#' -e "/^PKG_VERSION/s#=.*#=$ver#" ./package/lean/v2ray/Makefile
          make ./package/lean/v2ray/download V=s
          make ./package/lean/v2ray/check FIXUP=1 V=s
        fi

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd ./openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      run: |
        mkdir -p ./artifact/package
        cp -f ./openwrt/bin/packages/*/*/v2ray_*_generic.ipk ./artifact/package/
        cp -f ./openwrt/bin/packages/*/*/smartdns_*_generic.ipk ./artifact/package/

    - name: Upload packages
      uses: actions/upload-artifact@v2
      with:
        path: ./artifact/package/*.ipk
